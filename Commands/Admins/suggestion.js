const { MessageEmbed, Message, CommandInteraction, Client, Permissions } = require("discord.js");
const suggestSetupDB = require("../../Memory/Schems/suggestSetupDB");
const suggestDB = require("../../Memory/Schems/SuggestDB");

module.exports = {
  name: "suggestion",
  description: "–ü—Ä–∏–º–∏—Ç–µ –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.",
  usage: "/suggestion",
  options: [
    {
      name: "accept",
      description: "–ü—Ä–∏–º–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.",
      type: "SUB_COMMAND",
      options: [
        {name: "message-id", description: "–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–Ω—è—Ç—å.", type: "STRING", required: true},
        {name: "reason", description: "–ü—Ä–∏—á–∏–Ω–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–π —ç—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±—ã–ª–æ –ø—Ä–∏–Ω—è—Ç–æ.", type: "STRING", required: true}
      ]
    },
    {
      name: "decline",
      description: "–û—Ç–∫–ª–æ–Ω–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.",
      type: "SUB_COMMAND",
      options: [
        {name: "message-id", description: "–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª–æ–Ω–∏—Ç—å.", type: "STRING", required: true},
        {name: "reason", description: "–ü—Ä–∏—á–∏–Ω–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–π —ç—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ.", type: "STRING", required: true}
      ]
    },
    {
      name: "delete",
      description: "–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.",
      type: "SUB_COMMAND",
      options: [
        {name: "message-id", description: "–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª–æ–Ω–∏—Ç—å.", type: "STRING", required: true},
      ]
    },
  ],
  /**
   *
   * @param {CommandInteraction} interaction
   * @param {Client} client
   */
  async execute(interaction, client) {
    const messageId = interaction.options.getString("message-id");
    const reason = interaction.options.getString("reason");

    if(reason) {
      if(reason.length > 1024)
      return interaction.reply({embeds: [new MessageEmbed().setColor("RED").setDescription(`‚ùå –í–∞—à–∞ –ø—Ä–∏—á–∏–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª–∏–Ω–Ω–µ–µ 1024 —Å–∏–º–≤–æ–ª–æ–≤.`)], ephemeral: true})
    }
    
    const suggestSetup = await suggestSetupDB.findOne({ GuildID: interaction.guildId });
    var suggestionsChannel;

    if(!suggestSetup) {
      return interaction.reply({embeds: [new MessageEmbed().setColor("RED").setDescription(`‚ùå –≠—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞—Å—Ç—Ä–æ–∏–ª —Å–∏—Å—Ç–µ–º—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.`)]})
    } else {
      suggestionsChannel = interaction.guild.channels.cache.get(suggestSetup.ChannelID)
    }
    
    if(interaction.options.getSubcommand() != "delete") {
      if(suggestSetup.SuggestionManagers.length <= 0 || !suggestSetup.SuggestionManagers) {
        if(!interaction.member.permissions.has(Permissions.FLAGS.ADMINISTRATOR))
          return interaction.reply({embeds: [new MessageEmbed().setColor("RED").setDescription(`‚ùå –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –ø–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º.`)], ephemeral: true});
      } else {
        for (var i = 0; i < suggestSetup.SuggestionManagers.length; i++) {
          if (!interaction.member.roles.cache.has(suggestSetup.SuggestionManagers[i])) 
            continue;
           
          if (interaction.member.roles.cache.has(suggestSetup.SuggestionManagers[i])) 
            var suggestionManager = true;
      }
      if(!suggestionManager)
        return interaction.reply({embeds: [new MessageEmbed().setColor("RED").setDescription(`‚ùå –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –ø–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º`)], ephemeral: true});
      }
    }

    
    const suggestion = await suggestDB.findOne({GuildID: interaction.guild.id, MessageID: messageId});

    if(!suggestion)
      return interaction.reply({embeds: [new MessageEmbed().setColor("RED").setDescription(`‚ùå –≠—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.`)], ephemeral: true})

    const message = await suggestionsChannel.messages.fetch(messageId)

    if(!message)
      return interaction.reply({embeds: [new MessageEmbed().setColor("RED").setDescription(`‚ùå –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ.`)], ephemeral: true})

    const Embed = message.embeds[0];
    if(!Embed) return;
    
    switch(interaction.options.getSubcommand()) {
      case "accept":
        Embed.fields[1] = {name: "–°—Ç–∞—Ç—É—Å", value: "Accepted", inline: true};
        Embed.fields[2] = {name: "–ü—Ä–∏—á–∏–Ω–∞", value: `${reason}`, inline: false}
        message.edit({embeds: [Embed.setColor("GREEN")], content: `<@${suggestion.MemberID}>`, components: []});

        if(suggestion.DM) {
          const member = client.users.cache.get(suggestion.MemberID);
          member.send({embeds: [new MessageEmbed().setColor("GREEN").setTitle("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ üí°").setDescription(`‚úÖ –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±—ã–ª–æ –ø—Ä–∏–Ω—è—Ç–æ.`).addFields({name: "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ", value: `[link](${message.url})`, inline: true}, {name: "–°–µ—Ä–≤–µ—Ä", value: `${interaction.guild.name}`, inline: true}, {name: "–ü—Ä–∏—á–∏–Ω–∞", value: `${reason}`, inline: true})]}).catch(() => null)
        }
        return interaction.reply({embeds: [new MessageEmbed().setColor("AQUA").setDescription(`‚úÖ [Suggestion](${message.url}) –±—ã–ª–æ –ø—Ä–∏–Ω—è—Ç–æ.`)], ephemeral: true})
      break;

      case "decline":
        Embed.fields[1] = {name: "–°—Ç–∞—Ç—É—Å", value: "Declined", inline: true};
        Embed.fields[2] = {name: "–ü—Ä–∏—á–∏–Ω–∞", value: `${reason}`, inline: false}
        message.edit({embeds: [Embed.setColor("RED")], content: `<@${suggestion.MemberID}>`, components: []});

        if(suggestion.DM) {
          const member = client.users.cache.get(suggestion.MemberID);
          member.send({embeds: [new MessageEmbed().setColor("RED").setTitle("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ üí°").setDescription(`‚ùå –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ.`).addFields({name: "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ", value: `[link](${message.url})`, inline: true}, {name: "–°–µ—Ä–≤–µ—Ä", value: `${interaction.guild.name}`, inline: true}, {name: "–ü—Ä–∏—á–∏–Ω–∞", value: `${reason}`, inline: true})]}).catch(() => null)
        }
        return interaction.reply({embeds: [new MessageEmbed().setColor("AQUA").setDescription(`‚úÖ –ø—Ä–µ–¥–ª–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ.`)], ephemeral: true})
      break;
      
      case "delete":
        if(!suggestSetup.AllowOwnSuggestionDelete && !suggestionManager) {
          return interaction.reply({embeds: [new MessageEmbed().setColor("RED").setDescription(`‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ`)]})
        } else if (suggestionManager) {
          await message.delete()
          return interaction.reply({embeds: [new MessageEmbed().setColor("AQUA").setDescription(`‚úÖ –≠—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ.`)]})
        } else if(suggestSetup.AllowOwnSuggestionDelete) {
          if(suggestion.MemberID === interaction.member.id) {
            await message.delete()
            return interaction.reply({embeds: [new MessageEmbed().setColor("AQUA").setDescription(`‚úÖ –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ.`)]})  
          } else {
            return interaction.reply({embeds: [new MessageEmbed().setColor("RED").setDescription(`‚ùå –≠—Ç–æ –Ω–µ –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.`)]})  
          }
          
        }
      break;
    }
  },
};