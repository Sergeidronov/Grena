import { Canvas, Image, CanvasRenderingContext2D } from 'canvas';
import { ImageResolvable, MultilineOptions, Style } from './types';
import { Gradient } from '@discord-card/core';
export declare const rootDir: string;
export declare function snap(c: Canvas): void;
export declare function getFontSize(str: string): string | 30;
export declare function toImage(image: ImageResolvable, name?: string): Promise<Image>;
export declare var themes: {
    dark: {
        color: string;
        image: string;
    };
    circuit: {
        color: string;
        image: string;
    };
    code: {
        color: string;
        image: string;
    };
};
export declare class Text {
    x: number;
    y: number;
    text: string;
    textAlign?: CanvasTextAlign;
    style?: Style;
    gradient?: Gradient;
    strokeOn: boolean;
    font?: string;
    /** Font size in px */
    fontSize?: number;
    multilineOpts?: MultilineOptions;
    constructor(text: string, posX: number, posY: number);
    setFont(font: string): this;
    setFontSize(size: number): this;
    setStyle(style: Style): this;
    setGradient(gradient: Gradient): this;
    multiline(opts: MultilineOptions): this;
    stroke(): this;
    draw(ctx: CanvasRenderingContext2D, maxWidth?: number): void;
}
//# sourceMappingURL=lib.d.ts.map